{"version":3,"sources":["App.tsx","index.tsx"],"names":["validationSchema","yup","firstName","required","max","lastName","username","password","email","agreeToTerms","oneOf","MyTextField","label","props","useField","field","meta","errorText","error","touched","TextField","className","helperText","variant","fullWidth","App","initialValues","onSubmit","data","setSubmitting","resetForm","console","log","values","errors","isSubmitting","name","type","as","Checkbox","Button","disabled","JSON","stringify","ReactDOM","render","document","getElementById"],"mappings":"2QAMMA,G,OAAmBC,IAAW,CAClCC,UAAWD,MAAaE,WAAWC,IAAI,IACvCC,SAAUJ,MAAaE,WAAWC,IAAI,IACtCE,SAAUL,MAAaE,WAAWC,IAAI,IACtCG,SAAUN,MAAaE,WAAWC,IAAI,IACtCI,MAAOP,MAAaE,WAAWK,QAC/BC,aAAcR,MAAWS,MAAM,EAAC,GAAO,4BAGnCC,EAAiE,SAAC,GAGjE,IAFLC,EAEI,EAFJA,MACGC,EACC,2BACkBC,YAAaD,GAD/B,mBACGE,EADH,KACUC,EADV,KAEEC,EAAYD,EAAKE,OAASF,EAAKG,QAAUH,EAAKE,MAAQ,GAC5D,OACE,cAACE,EAAA,EAAD,yBACEC,UAAU,aACNN,GAFN,IAGEH,MAAOA,EACPU,WAAYL,EACZC,QAASD,EACTM,QAAQ,WACRC,WAAW,MA2DFC,EAtDO,WACpB,OACE,mCACE,cAAC,IAAD,CACEC,cAAe,CACbxB,UAAW,GACXG,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,MAAO,GACPC,cAAc,GAEhBT,iBAAkBA,EAClB2B,SAAU,SAACC,EAAD,GAAyC,IAAhCC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAChCD,GAAc,GACdE,QAAQC,IAAIJ,GACZC,GAAc,GACdC,KAdJ,SAiBG,gBAAGG,EAAH,EAAGA,OAAQC,EAAX,EAAWA,OAAQC,EAAnB,EAAmBA,aAAnB,OACC,eAAC,IAAD,CAAMd,UAAU,iBAAhB,UACE,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,CAAae,KAAK,YAAYxB,MAAM,eACpC,cAAC,EAAD,CAAawB,KAAK,WAAWxB,MAAM,iBAErC,qBAAKS,UAAU,YAAf,SACE,cAAC,EAAD,CAAae,KAAK,WAAWxB,MAAM,eAErC,qBAAKS,UAAU,YAAf,SACE,cAAC,EAAD,CAAae,KAAK,QAAQC,KAAK,QAAQzB,MAAM,YAE/C,qBAAKS,UAAU,YAAf,SACE,cAAC,EAAD,CAAae,KAAK,WAAWxB,MAAM,8BAErC,sBAAKS,UAAU,YAAf,UACE,cAAC,IAAD,CAAOe,KAAK,eAAeC,KAAK,WAAWC,GAAIC,MAC/C,0FAEF,qBAAKlB,UAAU,YAAf,SACE,cAACmB,EAAA,EAAD,CAAQH,KAAK,SAASI,SAAUN,EAAcX,WAAW,EAAzD,sBAKF,8BAAMkB,KAAKC,UAAUV,EAAQ,KAAM,KACnC,8BAAMS,KAAKC,UAAUT,EAAQ,KAAM,cC5E/CU,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d911ef12.chunk.js","sourcesContent":["import React from \"react\";\nimport { Button, Checkbox, TextField } from \"@material-ui/core\";\nimport { Field, FieldAttributes, Form, Formik, useField } from \"formik\";\nimport * as yup from \"yup\";\nimport \"./App.css\";\n\nconst validationSchema = yup.object({\n  firstName: yup.string().required().max(15),\n  lastName: yup.string().required().max(15),\n  username: yup.string().required().max(15),\n  password: yup.string().required().max(15),\n  email: yup.string().required().email(),\n  agreeToTerms: yup.bool().oneOf([true], \"Field must be checked\"),\n});\n\nconst MyTextField: React.FC<{ label: string } & FieldAttributes<{}>> = ({\n  label,\n  ...props\n}) => {\n  const [field, meta] = useField<{}>(props);\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n  return (\n    <TextField\n      className=\"form-item\"\n      {...field}\n      label={label}\n      helperText={errorText}\n      error={!!errorText}\n      variant=\"outlined\"\n      fullWidth={true}\n    />\n  );\n};\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <Formik\n        initialValues={{\n          firstName: \"\",\n          lastName: \"\",\n          username: \"\",\n          password: \"\",\n          email: \"\",\n          agreeToTerms: false,\n        }}\n        validationSchema={validationSchema}\n        onSubmit={(data, { setSubmitting, resetForm }) => {\n          setSubmitting(true);\n          console.log(data);\n          setSubmitting(false);\n          resetForm();\n        }}\n      >\n        {({ values, errors, isSubmitting }) => (\n          <Form className=\"form-container\">\n            <div className=\"form-item\">\n              <MyTextField name=\"firstName\" label=\"First Name\" />\n              <MyTextField name=\"lastName\" label=\"Last Name\" />\n            </div>\n            <div className=\"form-item\">\n              <MyTextField name=\"username\" label=\"Username\" />\n            </div>\n            <div className=\"form-item\">\n              <MyTextField name=\"email\" type=\"email\" label=\"Email\" />\n            </div>\n            <div className=\"form-item\">\n              <MyTextField name=\"password\" label=\"Password (at most 15\b)\" />\n            </div>\n            <div className=\"form-item\">\n              <Field name=\"agreeToTerms\" type=\"checkbox\" as={Checkbox} />\n              <label>Tick the box if you agree the Terms and Conditions</label>\n            </div>\n            <div className=\"form-item\">\n              <Button type=\"submit\" disabled={isSubmitting} fullWidth={true}>\n                Submit\n              </Button>\n            </div>\n\n            <pre>{JSON.stringify(values, null, 2)}</pre>\n            <pre>{JSON.stringify(errors, null, 2)}</pre>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}